name: CI

on:
  push:
    branches: [ "main" ]

jobs:
  lint:
    name: Lint Shell scripts (ShellCheck)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run ShellCheck on scripts
        run: shellcheck -x scripts/*.sh

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          SHORT_SHA="${GITHUB_SHA::7}"
          echo "Building Docker image with tags 'latest' and '$SHORT_SHA'"

          docker build -t janus-core:latest -t janus-core:$SHORT_SHA .

      - name: Docker login (optional)
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          if [ -n "$DOCKER_USERNAME" ] && [ -n "$DOCKER_PASSWORD" ]; then
            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          else
            echo "Skipping Docker login (secrets not set)"
          fi

      - name: Push image to registry (optional)
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          SHORT_SHA="${GITHUB_SHA::7}"
          if [ -n "$DOCKER_USERNAME" ]; then
            docker tag janus-core:latest "$DOCKER_USERNAME/janus-core:latest"
            docker tag janus-core:latest "$DOCKER_USERNAME/janus-core:$SHORT_SHA"
            docker push "$DOCKER_USERNAME/janus-core:latest"
            docker push "$DOCKER_USERNAME/janus-core:$SHORT_SHA"
          else
            echo "Skipping Docker push (DOCKER_USERNAME not set)"
          fi
